@startuml "classification-data-stats"

participant Client
participant "client.Classification" as client_classification
participant "common.ClassificationInitializationImpl" as common_classification_initialization_impl
participant "common.Classification" as common_classification
participant Host
participant TribuoEnclave
participant DataStats
participant DataStatsResponse
participant TribuoObject

' Host and Enclave start
activate Host
Host -> TribuoEnclave: start
activate TribuoEnclave
TribuoEnclave --> Host

' Client start
activate Client
Client -> client_classification : constructor
activate client_classification

' Classification initialization
client_classification -> common_classification_initialization_impl : constructor(irisDataPath, trainProportion, seed)
activate common_classification_initialization_impl
common_classification_initialization_impl --> client_classification

' Sending the request to the Host
client_classification -> Client : sendAndReceive
Client -> Client : sendMail
activate Client
Client -> Host : write

' Host delivers mails
Host -> TribuoEnclave: deliverMail

' Enclave processes mail
TribuoEnclave -> common_classification_initialization_impl : execute
common_classification_initialization_impl -> common_classification : constructor
activate common_classification
common_classification --> common_classification_initialization_impl

common_classification_initialization_impl -> TribuoObject : encode(Classification)
TribuoObject --> common_classification_initialization_impl : id
common_classification_initialization_impl --> TribuoEnclave : id

' Enclave writes back to Host
TribuoEnclave --> Host: postMail(id)

' Host writes back to Client
Host --> Client : write(id)

Client --> Client : id
deactivate Client

Client --> client_classification : id
client_classification --> Client : client.Classification instance
' Client now has the id for the Classification instance and can use it to send requests

' Client sends DataStats request
Client -> client_classification : dataStats
client_classification -> DataStats : constructor
activate DataStats
DataStats --> client_classification

' Sending the request to the Host
client_classification -> Client : sendAndReceive
Client -> Client : sendMail
activate Client
Client -> Host : write(DataStats(id))

' Host delivers mail to the Enclave
Host -> TribuoEnclave : deliverMail

' Enclave processes mail
TribuoEnclave -> DataStats : execute
DataStats -> TribuoObject : objects[id]
TribuoObject --> DataStats : Classification
DataStats -> common_classification : dataStats
common_classification -> DataStatsResponse : constructor
activate DataStatsResponse
DataStatsResponse --> common_classification
common_classification --> DataStats : DataStatsResponse
DataStats -> DataStatsResponse : encode(DataStatsResponse)
DataStatsResponse --> DataStats : DataStatsResponse as ByteArray
DataStats --> TribuoEnclave : DataStatsResponse as ByteArray

' Enclave writes back to Host
TribuoEnclave --> Host : postMail(DataStatsResponse as ByteArray)

' Host writes back to Client
Host --> Client : write(DataStatsResponse as ByteArray)

Client --> Client : DataStatsResponse as ByteArray
deactivate Client
Client --> client_classification : DataStatsResponse
client_classification --> Client

' Client logs the response to data stats
note left
Client logs DataStatsResponse and
proceeds to the next request
end note

@enduml